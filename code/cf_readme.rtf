{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 The canonical form application cf reads the output of the graph generating application gg.\
\
cf takes a single argument, the file containing the output of gg or else stdin, and outputs the canonical form of a 3-regular planar graph using clockwise breadth first search as follows:\
\
(Number of vertices)  (# of nbrs of v0) (nbr 1 of v0) \'85 for all remaining vertices and their neighbours\
\
Sample execution: \
\
gcc cf.c -o cf\
\
1) ./cf filename \
2) ./cf < input\
3) ./gg < input | ./cf\
4) /run_no_dups\
\
Entries in filename or input must have the form: \
(graph number) (total number of vertices) (# of nbrs of v0) (nbr 1 of v0) (edge number v0 nbr) \'85 for all remaining vertices and their neighbours\
\
Code written by David Mitchell based on the instruction of Wendy Myrvold at the University of Victoria - April 29,2017}